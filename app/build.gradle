apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.example.rxhttp"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        rxhttp_okhttp: okhttp_version,
//                        rxhttp_package: 'rxhttp',  //设置RxHttp相关类的包名，多module依赖时，需要配置不同的包名
                        rxhttp_rxjava: 'rxjava3'     //可传入rxjava2、rxjava3
                ]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'

//    implementation project(":rxhttp")
//    kapt project(':rxhttp-compiler')

    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"

    implementation "com.ljx.rxhttp:rxhttp:${rxhttp_version}"
    kapt "com.ljx.rxhttp:rxhttp-compiler:${rxhttp_version}"

    implementation 'com.ljx.rxlife:rxlife-coroutine:2.0.0'

    //管理RxJava及生命周期，Activity/Fragment 销毁，自动关闭未完成的请求
    implementation 'com.ljx.rxlife3:rxlife-rxjava:3.0.0'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.2'

    implementation "com.ljx.rxhttp:converter-jackson:${rxhttp_converter_version}"
    implementation "com.ljx.rxhttp:converter-fastjson:${rxhttp_converter_version}"
    implementation "com.ljx.rxhttp:converter-protobuf:${rxhttp_converter_version}"
    implementation "com.ljx.rxhttp:converter-simplexml:${rxhttp_converter_version}"

//    implementation project(':rxhttp-converter:converter-fastjson')
//    implementation project(':rxhttp-converter:converter-simplexml')
//    implementation project(':rxhttp-converter:converter-protobuf')
//    implementation project(':rxhttp-converter:converter-jackson')

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
